# Smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys 'C-\\') || tmux select-pane -l"

set-option -g default-terminal "screen-256color"

# Shift-movement keys will resize panes.
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

bind -r C-b last-window

set -g base-index 1
set -s escape-time 0
set -g renumber-windows on
set-window-option -g automatic-rename on
set-window-option -g automatic-rename-format "#{pane_current_path}"

setw -g aggressive-resize on

# Copy/paste using vim-style keys.
bind Escape copy-mode
unbind p
bind p paste-buffer

set -g mode-keys vi

set -g set-clipboard on

bind r source-file ~/.tmux.conf \; display "Reloaded tmux config file."

set -g status-style bg=colour237,fg=colour255

set -g window-status-style fg=colour245
set -g window-status-format "#[bg=colour237] #I: #W #[bg=colour235] "

set -g window-status-current-style bright,fg=colour6
set -g window-status-current-format "#[bg=colour240] #I: #W #[bg=colour235] "

set -g window-status-last-style bright,fg=colour249

set -g status-left ""
set -g window-status-separator ""

set -g pane-border-style bg=colour237,fg=colour237
set -g pane-active-border-style bg=colour237,fg=colour237

bind '"' split-window -c "#{pane_current_path}"
bind '%' split-window -h -c "#{pane_current_path}"
